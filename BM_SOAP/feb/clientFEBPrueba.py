'''
Created on 12/11/2013

@author: jesusropi
'''
# -*- coding: utf-8 -*-
################################################################################
# Note: Generated by soapbox.wsdl2py at 2013-11-12 11:53:19.686000
#       Try to avoid editing it if you might need to regenerate it.
################################################################################


from soapbox import soap, xsd
from soapbox.xsd import UNBOUNDED


################################################################################
# Schemas


# http://servicios.feb.es/serviciosWeb


class ArrayOfTemporadaItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    TemporadaItems = xsd.ListElement('TemporadaItem', 'TemporadaItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class TemporadaItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    TemporadaIDs = xsd.ListElement(xsd.Int, 'TemporadaID', minOccurs=1, maxOccurs=1)
    TemporadaNombres = xsd.ListElement(xsd.String, 'TemporadaNombre', minOccurs=0, maxOccurs=1)
    NombreCategorias = xsd.ListElement(xsd.String, 'NombreCategoria', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, TemporadaID):
        instance = cls()
        instance.TemporadaID = TemporadaID
        return instance


class ArrayOfCategoriaItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    CategoriaItems = xsd.ListElement('CategoriaItem', 'CategoriaItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class CategoriaItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    CategoriaIDs = xsd.ListElement(xsd.Int, 'CategoriaID', minOccurs=1, maxOccurs=1)
    CategoriaNombres = xsd.ListElement(xsd.String, 'CategoriaNombre', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, CategoriaID):
        instance = cls()
        instance.CategoriaID = CategoriaID
        return instance


class ArrayOfEquipoItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    EquipoItems = xsd.ListElement('EquipoItem', 'EquipoItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class EquipoItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    IdInscripcions = xsd.ListElement(xsd.Int, 'IdInscripcion', minOccurs=1, maxOccurs=1)
    NombreEquipos = xsd.ListElement(xsd.String, 'NombreEquipo', minOccurs=0, maxOccurs=1)
    AliasEquipos = xsd.ListElement(xsd.String, 'AliasEquipo', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, IdInscripcion):
        instance = cls()
        instance.IdInscripcion = IdInscripcion
        return instance


class ArrayOfFaseItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    FaseItems = xsd.ListElement('FaseItem', 'FaseItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class FaseItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    FaseIDs = xsd.ListElement(xsd.Int, 'FaseID', minOccurs=1, maxOccurs=1)
    FaseNombres = xsd.ListElement(xsd.String, 'FaseNombre', minOccurs=0, maxOccurs=1)
    FaseAliass = xsd.ListElement(xsd.String, 'FaseAlias', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, FaseID):
        instance = cls()
        instance.FaseID = FaseID
        return instance


class ArrayOfGrupoItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    GrupoItems = xsd.ListElement('GrupoItem', 'GrupoItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class GrupoItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    GrupoIDs = xsd.ListElement(xsd.Int, 'GrupoID', minOccurs=1, maxOccurs=1)
    GrupoNombres = xsd.ListElement(xsd.String, 'GrupoNombre', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, GrupoID):
        instance = cls()
        instance.GrupoID = GrupoID
        return instance


class ArrayOfJornadaItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    JornadaItems = xsd.ListElement('JornadaItem', 'JornadaItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class JornadaItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    IdJornadas = xsd.ListElement(xsd.Int, 'IdJornada', minOccurs=1, maxOccurs=1)
    NumJornadas = xsd.ListElement(xsd.Int, 'NumJornada', minOccurs=1, maxOccurs=1)
    FechaJornadas = xsd.ListElement(xsd.String, 'FechaJornada', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, IdJornada, NumJornada):
        instance = cls()
        instance.IdJornada = IdJornada
        instance.NumJornada = NumJornada
        return instance


class ArrayOfPartidoItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    PartidoItems = xsd.ListElement('PartidoItem', 'PartidoItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class PartidoItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    IdPartidos = xsd.ListElement(xsd.Int, 'IdPartido', minOccurs=1, maxOccurs=1)
    EquipoLocals = xsd.ListElement(xsd.String, 'EquipoLocal', minOccurs=0, maxOccurs=1)
    EquipoVisitantes = xsd.ListElement(xsd.String, 'EquipoVisitante', minOccurs=0, maxOccurs=1)
    AliasEquipoLocals = xsd.ListElement(xsd.String, 'AliasEquipoLocal', minOccurs=0, maxOccurs=1)
    AliasEquipoVisitantes = xsd.ListElement(xsd.String, 'AliasEquipoVisitante', minOccurs=0, maxOccurs=1)
    Fechas = xsd.ListElement(xsd.String, 'Fecha', minOccurs=0, maxOccurs=1)
    Horas = xsd.ListElement(xsd.String, 'Hora', minOccurs=0, maxOccurs=1)
    ResultadoLocals = xsd.ListElement(xsd.Int, 'ResultadoLocal', minOccurs=1, maxOccurs=1)
    ResultadoVisitantes = xsd.ListElement(xsd.Int, 'ResultadoVisitante', minOccurs=1, maxOccurs=1)

    @classmethod
    def create(cls, IdPartido, ResultadoLocal, ResultadoVisitante):
        instance = cls()
        instance.IdPartido = IdPartido
        instance.ResultadoLocal = ResultadoLocal
        instance.ResultadoVisitante = ResultadoVisitante
        return instance


class InfoPartidoItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    IdInscripLocals = xsd.ListElement(xsd.Int, 'IdInscripLocal', minOccurs=1, maxOccurs=1)
    IdInscripVisitantes = xsd.ListElement(xsd.Int, 'IdInscripVisitante', minOccurs=1, maxOccurs=1)
    NombreEquipoLocals = xsd.ListElement(xsd.String, 'NombreEquipoLocal', minOccurs=0, maxOccurs=1)
    NombreEquipoVisitantes = xsd.ListElement(xsd.String, 'NombreEquipoVisitante', minOccurs=0, maxOccurs=1)
    ResultadoLocals = xsd.ListElement(xsd.Int, 'ResultadoLocal', minOccurs=1, maxOccurs=1)
    ResultadoVisitantes = xsd.ListElement(xsd.Int, 'ResultadoVisitante', minOccurs=1, maxOccurs=1)
    ParcialesLocals = xsd.ListElement(xsd.String, 'ParcialesLocal', minOccurs=0, maxOccurs=1)
    ParcialesVisitantes = xsd.ListElement(xsd.String, 'ParcialesVisitante', minOccurs=0, maxOccurs=1)
    PrimerParcialLocals = xsd.ListElement(xsd.Int, 'PrimerParcialLocal', minOccurs=1, maxOccurs=1)
    SegundoParcialLocals = xsd.ListElement(xsd.Int, 'SegundoParcialLocal', minOccurs=1, maxOccurs=1)
    TercerParcialLocals = xsd.ListElement(xsd.Int, 'TercerParcialLocal', minOccurs=1, maxOccurs=1)
    CuartoParcialLocals = xsd.ListElement(xsd.Int, 'CuartoParcialLocal', minOccurs=1, maxOccurs=1)
    PrimerParcialVisitantes = xsd.ListElement(xsd.Int, 'PrimerParcialVisitante', minOccurs=1, maxOccurs=1)
    SegundoParcialVisitantes = xsd.ListElement(xsd.Int, 'SegundoParcialVisitante', minOccurs=1, maxOccurs=1)
    TercerParcialVisitantes = xsd.ListElement(xsd.Int, 'TercerParcialVisitante', minOccurs=1, maxOccurs=1)
    CuartoParcialVisitantes = xsd.ListElement(xsd.Int, 'CuartoParcialVisitante', minOccurs=1, maxOccurs=1)
    ProrrogasLocals = xsd.ListElement(xsd.String, 'ProrrogasLocal', minOccurs=0, maxOccurs=1)
    ProrrogasVisitantes = xsd.ListElement(xsd.String, 'ProrrogasVisitante', minOccurs=0, maxOccurs=1)
    NumeroProrrogass = xsd.ListElement(xsd.Int, 'NumeroProrrogas', minOccurs=1, maxOccurs=1)
    Fechas = xsd.ListElement(xsd.String, 'Fecha', minOccurs=0, maxOccurs=1)
    Horas = xsd.ListElement(xsd.String, 'Hora', minOccurs=0, maxOccurs=1)
    Campos = xsd.ListElement(xsd.String, 'Campo', minOccurs=0, maxOccurs=1)
    Localidads = xsd.ListElement(xsd.String, 'Localidad', minOccurs=0, maxOccurs=1)
    Provincias = xsd.ListElement(xsd.String, 'Provincia', minOccurs=0, maxOccurs=1)
    ArbitroPrincipals = xsd.ListElement(xsd.String, 'ArbitroPrincipal', minOccurs=0, maxOccurs=1)
    ArbitroAuxiliars = xsd.ListElement(xsd.String, 'ArbitroAuxiliar', minOccurs=0, maxOccurs=1)
    EstadisticaLocals = xsd.ListElement('ArrayOfEstadisticaPartidoJugadorItem', 'EstadisticaLocal', minOccurs=0, maxOccurs=1)
    EstadisticaVisitantes = xsd.ListElement('ArrayOfEstadisticaPartidoJugadorItem', 'EstadisticaVisitante', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, IdInscripLocal, IdInscripVisitante, ResultadoLocal, ResultadoVisitante, PrimerParcialLocal, SegundoParcialLocal, TercerParcialLocal, CuartoParcialLocal, PrimerParcialVisitante, SegundoParcialVisitante, TercerParcialVisitante, CuartoParcialVisitante, NumeroProrrogas):
        instance = cls()
        instance.IdInscripLocal = IdInscripLocal
        instance.IdInscripVisitante = IdInscripVisitante
        instance.ResultadoLocal = ResultadoLocal
        instance.ResultadoVisitante = ResultadoVisitante
        instance.PrimerParcialLocal = PrimerParcialLocal
        instance.SegundoParcialLocal = SegundoParcialLocal
        instance.TercerParcialLocal = TercerParcialLocal
        instance.CuartoParcialLocal = CuartoParcialLocal
        instance.PrimerParcialVisitante = PrimerParcialVisitante
        instance.SegundoParcialVisitante = SegundoParcialVisitante
        instance.TercerParcialVisitante = TercerParcialVisitante
        instance.CuartoParcialVisitante = CuartoParcialVisitante
        instance.NumeroProrrogas = NumeroProrrogas
        return instance


class ArrayOfEstadisticaPartidoJugadorItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    EstadisticaPartidoJugadorItems = xsd.ListElement('EstadisticaPartidoJugadorItem', 'EstadisticaPartidoJugadorItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class EstadisticaPartidoJugadorItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    Ids = xsd.ListElement(xsd.Int, 'Id', minOccurs=1, maxOccurs=1)
    IdJugadors = xsd.ListElement(xsd.Int, 'IdJugador', minOccurs=1, maxOccurs=1)
    Nombres = xsd.ListElement(xsd.String, 'Nombre', minOccurs=0, maxOccurs=1)
    SegundosJugadoss = xsd.ListElement(xsd.Double, 'SegundosJugados', minOccurs=1, maxOccurs=1)
    TiempoJugados = xsd.ListElement(xsd.String, 'TiempoJugado', minOccurs=0, maxOccurs=1)
    Puntoss = xsd.ListElement(xsd.Int, 'Puntos', minOccurs=1, maxOccurs=1)
    IntentosDoss = xsd.ListElement(xsd.Int, 'IntentosDos', minOccurs=1, maxOccurs=1)
    ConvertidosDoss = xsd.ListElement(xsd.Int, 'ConvertidosDos', minOccurs=1, maxOccurs=1)
    IntentosTress = xsd.ListElement(xsd.Int, 'IntentosTres', minOccurs=1, maxOccurs=1)
    ConvertidosTress = xsd.ListElement(xsd.Int, 'ConvertidosTres', minOccurs=1, maxOccurs=1)
    IntentosUnos = xsd.ListElement(xsd.Int, 'IntentosUno', minOccurs=1, maxOccurs=1)
    ConvertidosUnos = xsd.ListElement(xsd.Int, 'ConvertidosUno', minOccurs=1, maxOccurs=1)
    RebotesOfs = xsd.ListElement(xsd.Int, 'RebotesOf', minOccurs=1, maxOccurs=1)
    RebotesDefs = xsd.ListElement(xsd.Int, 'RebotesDef', minOccurs=1, maxOccurs=1)
    Asistenciass = xsd.ListElement(xsd.Int, 'Asistencias', minOccurs=1, maxOccurs=1)
    BalonesRecs = xsd.ListElement(xsd.Int, 'BalonesRec', minOccurs=1, maxOccurs=1)
    BalonesPers = xsd.ListElement(xsd.Int, 'BalonesPer', minOccurs=1, maxOccurs=1)
    TaponesFavs = xsd.ListElement(xsd.Int, 'TaponesFav', minOccurs=1, maxOccurs=1)
    TaponesCons = xsd.ListElement(xsd.Int, 'TaponesCon', minOccurs=1, maxOccurs=1)
    Matess = xsd.ListElement(xsd.Int, 'Mates', minOccurs=1, maxOccurs=1)
    FaltasComs = xsd.ListElement(xsd.Int, 'FaltasCom', minOccurs=1, maxOccurs=1)
    FaltasRecs = xsd.ListElement(xsd.Int, 'FaltasRec', minOccurs=1, maxOccurs=1)
    Valoracions = xsd.ListElement(xsd.Int, 'Valoracion', minOccurs=1, maxOccurs=1)
    CincoInicials = xsd.ListElement(xsd.Int, 'CincoInicial', minOccurs=1, maxOccurs=1)
    NumeroDorsals = xsd.ListElement(xsd.Int, 'NumeroDorsal', minOccurs=1, maxOccurs=1)

    @classmethod
    def create(cls, Id, IdJugador, SegundosJugados, Puntos, IntentosDos, ConvertidosDos, IntentosTres, ConvertidosTres, IntentosUno, ConvertidosUno, RebotesOf, RebotesDef, Asistencias, BalonesRec, BalonesPer, TaponesFav, TaponesCon, Mates, FaltasCom, FaltasRec, Valoracion, CincoInicial, NumeroDorsal):
        instance = cls()
        instance.Id = Id
        instance.IdJugador = IdJugador
        instance.SegundosJugados = SegundosJugados
        instance.Puntos = Puntos
        instance.IntentosDos = IntentosDos
        instance.ConvertidosDos = ConvertidosDos
        instance.IntentosTres = IntentosTres
        instance.ConvertidosTres = ConvertidosTres
        instance.IntentosUno = IntentosUno
        instance.ConvertidosUno = ConvertidosUno
        instance.RebotesOf = RebotesOf
        instance.RebotesDef = RebotesDef
        instance.Asistencias = Asistencias
        instance.BalonesRec = BalonesRec
        instance.BalonesPer = BalonesPer
        instance.TaponesFav = TaponesFav
        instance.TaponesCon = TaponesCon
        instance.Mates = Mates
        instance.FaltasCom = FaltasCom
        instance.FaltasRec = FaltasRec
        instance.Valoracion = Valoracion
        instance.CincoInicial = CincoInicial
        instance.NumeroDorsal = NumeroDorsal
        return instance


class ArrayOfEquipoClasificacionItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    EquipoClasificacionItems = xsd.ListElement('EquipoClasificacionItem', 'EquipoClasificacionItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class EquipoClasificacionItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    IdInscripcions = xsd.ListElement(xsd.Int, 'IdInscripcion', minOccurs=1, maxOccurs=1)
    Posicions = xsd.ListElement(xsd.Int, 'Posicion', minOccurs=1, maxOccurs=1)
    NombreEquipos = xsd.ListElement(xsd.String, 'NombreEquipo', minOccurs=0, maxOccurs=1)
    AliasEquipos = xsd.ListElement(xsd.String, 'AliasEquipo', minOccurs=0, maxOccurs=1)
    Jugadoss = xsd.ListElement(xsd.Int, 'Jugados', minOccurs=1, maxOccurs=1)
    Ganadoss = xsd.ListElement(xsd.Int, 'Ganados', minOccurs=1, maxOccurs=1)
    Perdidoss = xsd.ListElement(xsd.Int, 'Perdidos', minOccurs=1, maxOccurs=1)
    PtosFavors = xsd.ListElement(xsd.Int, 'PtosFavor', minOccurs=1, maxOccurs=1)
    PtosContras = xsd.ListElement(xsd.Int, 'PtosContra', minOccurs=1, maxOccurs=1)
    Puntoss = xsd.ListElement(xsd.Int, 'Puntos', minOccurs=1, maxOccurs=1)
    Rachas = xsd.ListElement(xsd.Int, 'Racha', minOccurs=1, maxOccurs=1)
    Sancions = xsd.ListElement(xsd.Boolean, 'Sancion', minOccurs=1, maxOccurs=1)

    @classmethod
    def create(cls, IdInscripcion, Posicion, Jugados, Ganados, Perdidos, PtosFavor, PtosContra, Puntos, Racha, Sancion):
        instance = cls()
        instance.IdInscripcion = IdInscripcion
        instance.Posicion = Posicion
        instance.Jugados = Jugados
        instance.Ganados = Ganados
        instance.Perdidos = Perdidos
        instance.PtosFavor = PtosFavor
        instance.PtosContra = PtosContra
        instance.Puntos = Puntos
        instance.Racha = Racha
        instance.Sancion = Sancion
        return instance


class EstadisticaEquipo(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    Jugadoress = xsd.ListElement('ArrayOfEstadisticaJugadorItem', 'Jugadores', minOccurs=0, maxOccurs=1)
    FasesParticipantes = xsd.ListElement('ArrayOfFaseItem', 'FasesParticipante', minOccurs=0, maxOccurs=1)
    NombreEquipos = xsd.ListElement(xsd.String, 'NombreEquipo', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ArrayOfEstadisticaJugadorItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    EstadisticaJugadorItems = xsd.ListElement('EstadisticaJugadorItem', 'EstadisticaJugadorItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class EstadisticaJugadorItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    Ids = xsd.ListElement(xsd.Int, 'Id', minOccurs=1, maxOccurs=1)
    Nombres = xsd.ListElement(xsd.String, 'Nombre', minOccurs=0, maxOccurs=1)
    Temporadas = xsd.ListElement(xsd.String, 'Temporada', minOccurs=0, maxOccurs=1)
    NombreFases = xsd.ListElement(xsd.String, 'NombreFase', minOccurs=0, maxOccurs=1)
    SegundosJugadoss = xsd.ListElement(xsd.Double, 'SegundosJugados', minOccurs=1, maxOccurs=1)
    TiempoJugados = xsd.ListElement(xsd.String, 'TiempoJugado', minOccurs=0, maxOccurs=1)
    Puntoss = xsd.ListElement(xsd.Int, 'Puntos', minOccurs=1, maxOccurs=1)
    IntentosDoss = xsd.ListElement(xsd.Int, 'IntentosDos', minOccurs=1, maxOccurs=1)
    ConvertidosDoss = xsd.ListElement(xsd.Int, 'ConvertidosDos', minOccurs=1, maxOccurs=1)
    IntentosTress = xsd.ListElement(xsd.Int, 'IntentosTres', minOccurs=1, maxOccurs=1)
    ConvertidosTress = xsd.ListElement(xsd.Int, 'ConvertidosTres', minOccurs=1, maxOccurs=1)
    IntentosUnos = xsd.ListElement(xsd.Int, 'IntentosUno', minOccurs=1, maxOccurs=1)
    ConvertidosUnos = xsd.ListElement(xsd.Int, 'ConvertidosUno', minOccurs=1, maxOccurs=1)
    RebotesOfs = xsd.ListElement(xsd.Int, 'RebotesOf', minOccurs=1, maxOccurs=1)
    RebotesDefs = xsd.ListElement(xsd.Int, 'RebotesDef', minOccurs=1, maxOccurs=1)
    Asistenciass = xsd.ListElement(xsd.Int, 'Asistencias', minOccurs=1, maxOccurs=1)
    BalonesRecs = xsd.ListElement(xsd.Int, 'BalonesRec', minOccurs=1, maxOccurs=1)
    BalonesPers = xsd.ListElement(xsd.Int, 'BalonesPer', minOccurs=1, maxOccurs=1)
    TaponesFavs = xsd.ListElement(xsd.Int, 'TaponesFav', minOccurs=1, maxOccurs=1)
    TaponesCons = xsd.ListElement(xsd.Int, 'TaponesCon', minOccurs=1, maxOccurs=1)
    Matess = xsd.ListElement(xsd.Int, 'Mates', minOccurs=1, maxOccurs=1)
    FaltasComs = xsd.ListElement(xsd.Int, 'FaltasCom', minOccurs=1, maxOccurs=1)
    FaltasRecs = xsd.ListElement(xsd.Int, 'FaltasRec', minOccurs=1, maxOccurs=1)
    Valoracions = xsd.ListElement(xsd.Int, 'Valoracion', minOccurs=1, maxOccurs=1)
    IdJugadors = xsd.ListElement(xsd.Int, 'IdJugador', minOccurs=1, maxOccurs=1)
    NumPartidoss = xsd.ListElement(xsd.Int, 'NumPartidos', minOccurs=1, maxOccurs=1)
    NombreEquipos = xsd.ListElement(xsd.String, 'NombreEquipo', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, Id, SegundosJugados, Puntos, IntentosDos, ConvertidosDos, IntentosTres, ConvertidosTres, IntentosUno, ConvertidosUno, RebotesOf, RebotesDef, Asistencias, BalonesRec, BalonesPer, TaponesFav, TaponesCon, Mates, FaltasCom, FaltasRec, Valoracion, IdJugador, NumPartidos):
        instance = cls()
        instance.Id = Id
        instance.SegundosJugados = SegundosJugados
        instance.Puntos = Puntos
        instance.IntentosDos = IntentosDos
        instance.ConvertidosDos = ConvertidosDos
        instance.IntentosTres = IntentosTres
        instance.ConvertidosTres = ConvertidosTres
        instance.IntentosUno = IntentosUno
        instance.ConvertidosUno = ConvertidosUno
        instance.RebotesOf = RebotesOf
        instance.RebotesDef = RebotesDef
        instance.Asistencias = Asistencias
        instance.BalonesRec = BalonesRec
        instance.BalonesPer = BalonesPer
        instance.TaponesFav = TaponesFav
        instance.TaponesCon = TaponesCon
        instance.Mates = Mates
        instance.FaltasCom = FaltasCom
        instance.FaltasRec = FaltasRec
        instance.Valoracion = Valoracion
        instance.IdJugador = IdJugador
        instance.NumPartidos = NumPartidos
        return instance


class Jugador(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    Ids = xsd.ListElement(xsd.Int, 'Id', minOccurs=1, maxOccurs=1)
    Apellidoss = xsd.ListElement(xsd.String, 'Apellidos', minOccurs=0, maxOccurs=1)
    Nombres = xsd.ListElement(xsd.String, 'Nombre', minOccurs=0, maxOccurs=1)
    FechaNacs = xsd.ListElement(xsd.String, 'FechaNac', minOccurs=0, maxOccurs=1)
    LocalidadNacs = xsd.ListElement(xsd.String, 'LocalidadNac', minOccurs=0, maxOccurs=1)
    ProvinciaNacs = xsd.ListElement(xsd.String, 'ProvinciaNac', minOccurs=0, maxOccurs=1)
    Nacionalidads = xsd.ListElement(xsd.String, 'Nacionalidad', minOccurs=0, maxOccurs=1)
    URLs = xsd.ListElement(xsd.String, 'URL', minOccurs=0, maxOccurs=1)
    NombreEquipos = xsd.ListElement(xsd.String, 'NombreEquipo', minOccurs=0, maxOccurs=1)
    Trayectorias = xsd.ListElement('ArrayOfTrayectoriaItem', 'Trayectoria', minOccurs=0, maxOccurs=1)
    EstadisticaActuals = xsd.ListElement('ArrayOfEstadisticaJugadorItem', 'EstadisticaActual', minOccurs=0, maxOccurs=1)
    EstadisticasPasadass = xsd.ListElement('ArrayOfEstadisticaJugadorItem', 'EstadisticasPasadas', minOccurs=0, maxOccurs=1)
    FasesParticipantes = xsd.ListElement('ArrayOfFaseItem', 'FasesParticipante', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, Id):
        instance = cls()
        instance.Id = Id
        return instance


class ArrayOfTrayectoriaItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    TrayectoriaItems = xsd.ListElement('TrayectoriaItem', 'TrayectoriaItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class TrayectoriaItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    Ids = xsd.ListElement(xsd.Int, 'Id', minOccurs=1, maxOccurs=1)
    NombreEquipos = xsd.ListElement(xsd.String, 'NombreEquipo', minOccurs=0, maxOccurs=1)
    Licencias = xsd.ListElement(xsd.String, 'Licencia', minOccurs=0, maxOccurs=1)
    NombreTemporadas = xsd.ListElement(xsd.String, 'NombreTemporada', minOccurs=0, maxOccurs=1)
    Categorias = xsd.ListElement(xsd.String, 'Categoria', minOccurs=0, maxOccurs=1)
    NombreClubs = xsd.ListElement(xsd.String, 'NombreClub', minOccurs=0, maxOccurs=1)
    FechaAltas = xsd.ListElement(xsd.String, 'FechaAlta', minOccurs=0, maxOccurs=1)
    FechaBajas = xsd.ListElement(xsd.String, 'FechaBaja', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, Id):
        instance = cls()
        instance.Id = Id
        return instance


class ArrayOfTipoRankingItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    TipoRankingItems = xsd.ListElement('TipoRankingItem', 'TipoRankingItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class TipoRankingItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    Ids = xsd.ListElement(xsd.Int, 'Id', minOccurs=1, maxOccurs=1)
    Nombres = xsd.ListElement(xsd.String, 'Nombre', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, Id):
        instance = cls()
        instance.Id = Id
        return instance


class Rankings(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    TopsJornadas = xsd.ListElement('ArrayOfTopsJornadaRankingItem', 'TopsJornada', minOccurs=0, maxOccurs=1)
    AcumuladoFases = xsd.ListElement('ArrayOfAcumuladoRankingItem', 'AcumuladoFase', minOccurs=0, maxOccurs=1)
    TopesFases = xsd.ListElement('ArrayOfTopesRankingItem', 'TopesFase', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ArrayOfTopsJornadaRankingItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    TopsJornadaRankingItems = xsd.ListElement('TopsJornadaRankingItem', 'TopsJornadaRankingItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class TopsJornadaRankingItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    Nombres = xsd.ListElement(xsd.String, 'Nombre', minOccurs=0, maxOccurs=1)
    Apellidoss = xsd.ListElement(xsd.String, 'Apellidos', minOccurs=0, maxOccurs=1)
    Equipos = xsd.ListElement(xsd.String, 'Equipo', minOccurs=0, maxOccurs=1)
    Totals = xsd.ListElement(xsd.Int, 'Total', minOccurs=1, maxOccurs=1)

    @classmethod
    def create(cls, Total):
        instance = cls()
        instance.Total = Total
        return instance


class ArrayOfAcumuladoRankingItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    AcumuladoRankingItems = xsd.ListElement('AcumuladoRankingItem', 'AcumuladoRankingItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class AcumuladoRankingItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    Nombres = xsd.ListElement(xsd.String, 'Nombre', minOccurs=0, maxOccurs=1)
    Apellidoss = xsd.ListElement(xsd.String, 'Apellidos', minOccurs=0, maxOccurs=1)
    Equipos = xsd.ListElement(xsd.String, 'Equipo', minOccurs=0, maxOccurs=1)
    Totals = xsd.ListElement(xsd.Int, 'Total', minOccurs=1, maxOccurs=1)
    NumPartidoss = xsd.ListElement(xsd.Int, 'NumPartidos', minOccurs=1, maxOccurs=1)
    Medias = xsd.ListElement(xsd.String, 'Media', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, Total, NumPartidos):
        instance = cls()
        instance.Total = Total
        instance.NumPartidos = NumPartidos
        return instance


class ArrayOfTopesRankingItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    TopesRankingItems = xsd.ListElement('TopesRankingItem', 'TopesRankingItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class TopesRankingItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    Nombres = xsd.ListElement(xsd.String, 'Nombre', minOccurs=0, maxOccurs=1)
    Apellidoss = xsd.ListElement(xsd.String, 'Apellidos', minOccurs=0, maxOccurs=1)
    Equipos = xsd.ListElement(xsd.String, 'Equipo', minOccurs=0, maxOccurs=1)
    Totals = xsd.ListElement(xsd.Int, 'Total', minOccurs=1, maxOccurs=1)
    Jornadas = xsd.ListElement(xsd.String, 'Jornada', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, Total):
        instance = cls()
        instance.Total = Total
        return instance


class TemporadasDisponibles(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    key = xsd.ListElement(xsd.String, minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class TemporadasDisponiblesResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    TemporadasDisponiblesResult = xsd.ListElement('ArrayOfTemporadaItem', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class CategoriasDisponiblesXTemporada(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    idTemporada = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    key = xsd.ListElement(xsd.String, minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, idTemporada):
        instance = cls()
        instance.idTemporada = idTemporada
        return instance


class CategoriasDisponiblesXTemporadaResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    CategoriasDisponiblesXTemporadaResult = xsd.ListElement('ArrayOfCategoriaItem', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class TemporadasDisponiblesXCategoria(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    codCategoria = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    key = xsd.ListElement(xsd.String, minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, codCategoria):
        instance = cls()
        instance.codCategoria = codCategoria
        return instance


class TemporadasDisponiblesXCategoriaResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    TemporadasDisponiblesXCategoriaResult = xsd.ListElement('ArrayOfTemporadaItem', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class EquiposInscritosXCategoria(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    codCategoria = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    key = xsd.ListElement(xsd.String, minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, codCategoria):
        instance = cls()
        instance.codCategoria = codCategoria
        return instance


class EquiposInscritosXCategoriaResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    EquiposInscritosXCategoriaResult = xsd.ListElement('ArrayOfEquipoItem', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class CategoriaXEquipoInscrito(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    idInscripcion = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    key = xsd.ListElement(xsd.String, minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, idInscripcion):
        instance = cls()
        instance.idInscripcion = idInscripcion
        return instance


class CategoriaXEquipoInscritoResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    CategoriaXEquipoInscritoResult = xsd.ListElement('CategoriaItem', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class Fases(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    codCategoria = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    idTemporada = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    key = xsd.ListElement(xsd.String, minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, codCategoria, idTemporada):
        instance = cls()
        instance.codCategoria = codCategoria
        instance.idTemporada = idTemporada
        return instance


class FasesResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    FasesResult = xsd.ListElement('ArrayOfFaseItem', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class Grupos(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    idFase = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    key = xsd.ListElement(xsd.String, minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, idFase):
        instance = cls()
        instance.idFase = idFase
        return instance


class GruposResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    GruposResult = xsd.ListElement('ArrayOfGrupoItem', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class Jornadas(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    idGrupo = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    key = xsd.ListElement(xsd.String, minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, idGrupo):
        instance = cls()
        instance.idGrupo = idGrupo
        return instance


class JornadasResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    JornadasResult = xsd.ListElement('ArrayOfJornadaItem', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class Partidos(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    idJornada = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    key = xsd.ListElement(xsd.String, minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, idJornada):
        instance = cls()
        instance.idJornada = idJornada
        return instance


class PartidosResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    PartidosResult = xsd.ListElement('ArrayOfPartidoItem', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class Partido(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    idPartido = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    key = xsd.ListElement(xsd.String, minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, idPartido):
        instance = cls()
        instance.idPartido = idPartido
        return instance


class PartidoResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    PartidoResult = xsd.ListElement('InfoPartidoItem', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class ClasificacionXJornada(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    idJornada = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    key = xsd.ListElement(xsd.String, minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, idJornada):
        instance = cls()
        instance.idJornada = idJornada
        return instance


class ClasificacionXJornadaResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    ClasificacionXJornadaResult = xsd.ListElement('ArrayOfEquipoClasificacionItem', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class EstadisticasAcumuladasXEquipo(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    idInscripcion = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    key = xsd.ListElement(xsd.String, minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, idInscripcion):
        instance = cls()
        instance.idInscripcion = idInscripcion
        return instance


class EstadisticasAcumuladasXEquipoResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    EstadisticasAcumuladasXEquipoResult = xsd.ListElement('EstadisticaEquipo', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class EstadisticasAcumuladasXJugador(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    idInscripcion = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    idJugador = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    key = xsd.ListElement(xsd.String, minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, idInscripcion, idJugador):
        instance = cls()
        instance.idInscripcion = idInscripcion
        instance.idJugador = idJugador
        return instance


class EstadisticasAcumuladasXJugadorResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    EstadisticasAcumuladasXJugadorResult = xsd.ListElement('Jugador', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class TiposRanking(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    key = xsd.ListElement(xsd.String, minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class TiposRankingResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    TiposRankingResult = xsd.ListElement('ArrayOfTipoRankingItem', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class Ranking(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    idGrupo = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    idJornada = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    idTipoRanking = xsd.ListElement(xsd.Int, minOccurs=1, maxOccurs=1)
    key = xsd.ListElement(xsd.String, minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls, idGrupo, idJornada, idTipoRanking):
        instance = cls()
        instance.idGrupo = idGrupo
        instance.idJornada = idJornada
        instance.idTipoRanking = idTipoRanking
        return instance


class RankingResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    RankingResult = xsd.ListElement('Rankings', minOccurs=0, maxOccurs=1)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


Schema_e4972 = xsd.Schema(
    imports=[],
    targetNamespace='http://servicios.feb.es/serviciosWeb',
    elementFormDefault='qualified',
    simpleTypes=[],
    attributeGroups=[],
    groups=[],
    complexTypes=[ArrayOfTemporadaItem, TemporadaItem, ArrayOfCategoriaItem, CategoriaItem, ArrayOfEquipoItem, EquipoItem, ArrayOfFaseItem, FaseItem, ArrayOfGrupoItem, GrupoItem, ArrayOfJornadaItem, JornadaItem, ArrayOfPartidoItem, PartidoItem, InfoPartidoItem, ArrayOfEstadisticaPartidoJugadorItem, EstadisticaPartidoJugadorItem, ArrayOfEquipoClasificacionItem, EquipoClasificacionItem, EstadisticaEquipo, ArrayOfEstadisticaJugadorItem, EstadisticaJugadorItem, Jugador, ArrayOfTrayectoriaItem, TrayectoriaItem, ArrayOfTipoRankingItem, TipoRankingItem, Rankings, ArrayOfTopsJornadaRankingItem, TopsJornadaRankingItem, ArrayOfAcumuladoRankingItem, AcumuladoRankingItem, ArrayOfTopesRankingItem, TopesRankingItem],
    elements={'TemporadasDisponibles': xsd.Element(TemporadasDisponibles()), 'TemporadasDisponiblesResponse': xsd.Element(TemporadasDisponiblesResponse()), 'CategoriasDisponiblesXTemporada': xsd.Element(CategoriasDisponiblesXTemporada()), 'CategoriasDisponiblesXTemporadaResponse': xsd.Element(CategoriasDisponiblesXTemporadaResponse()), 'TemporadasDisponiblesXCategoria': xsd.Element(TemporadasDisponiblesXCategoria()), 'TemporadasDisponiblesXCategoriaResponse': xsd.Element(TemporadasDisponiblesXCategoriaResponse()), 'EquiposInscritosXCategoria': xsd.Element(EquiposInscritosXCategoria()), 'EquiposInscritosXCategoriaResponse': xsd.Element(EquiposInscritosXCategoriaResponse()), 'CategoriaXEquipoInscrito': xsd.Element(CategoriaXEquipoInscrito()), 'CategoriaXEquipoInscritoResponse': xsd.Element(CategoriaXEquipoInscritoResponse()), 'Fases': xsd.Element(Fases()), 'FasesResponse': xsd.Element(FasesResponse()), 'Grupos': xsd.Element(Grupos()), 'GruposResponse': xsd.Element(GruposResponse()), 'Jornadas': xsd.Element(Jornadas()), 'JornadasResponse': xsd.Element(JornadasResponse()), 'Partidos': xsd.Element(Partidos()), 'PartidosResponse': xsd.Element(PartidosResponse()), 'Partido': xsd.Element(Partido()), 'PartidoResponse': xsd.Element(PartidoResponse()), 'ClasificacionXJornada': xsd.Element(ClasificacionXJornada()), 'ClasificacionXJornadaResponse': xsd.Element(ClasificacionXJornadaResponse()), 'EstadisticasAcumuladasXEquipo': xsd.Element(EstadisticasAcumuladasXEquipo()), 'EstadisticasAcumuladasXEquipoResponse': xsd.Element(EstadisticasAcumuladasXEquipoResponse()), 'EstadisticasAcumuladasXJugador': xsd.Element(EstadisticasAcumuladasXJugador()), 'EstadisticasAcumuladasXJugadorResponse': xsd.Element(EstadisticasAcumuladasXJugadorResponse()), 'TiposRanking': xsd.Element(TiposRanking()), 'TiposRankingResponse': xsd.Element(TiposRankingResponse()), 'Ranking': xsd.Element(Ranking()), 'RankingResponse': xsd.Element(RankingResponse()), 'ArrayOfTemporadaItem': xsd.Element('ArrayOfTemporadaItem'), 'ArrayOfCategoriaItem': xsd.Element('ArrayOfCategoriaItem'), 'ArrayOfEquipoItem': xsd.Element('ArrayOfEquipoItem'), 'CategoriaItem': xsd.Element('CategoriaItem'), 'ArrayOfFaseItem': xsd.Element('ArrayOfFaseItem'), 'ArrayOfGrupoItem': xsd.Element('ArrayOfGrupoItem'), 'ArrayOfJornadaItem': xsd.Element('ArrayOfJornadaItem'), 'ArrayOfPartidoItem': xsd.Element('ArrayOfPartidoItem'), 'InfoPartidoItem': xsd.Element('InfoPartidoItem'), 'ArrayOfEquipoClasificacionItem': xsd.Element('ArrayOfEquipoClasificacionItem'), 'EstadisticaEquipo': xsd.Element('EstadisticaEquipo'), 'Jugador': xsd.Element('Jugador'), 'ArrayOfTipoRankingItem': xsd.Element('ArrayOfTipoRankingItem'), 'Rankings': xsd.Element('Rankings')},
)


################################################################################
# Methods


TemporadasDisponibles_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/TemporadasDisponibles',
    input='TemporadasDisponibles',
    inputPartName='parameters',
    output='TemporadasDisponiblesResponse',
    outputPartName='parameters',
    operationName='TemporadasDisponibles',
    style='document',
)


CategoriasDisponiblesXTemporada_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/CategoriasDisponiblesXTemporada',
    input='CategoriasDisponiblesXTemporada',
    inputPartName='parameters',
    output='CategoriasDisponiblesXTemporadaResponse',
    outputPartName='parameters',
    operationName='CategoriasDisponiblesXTemporada',
    style='document',
)


TemporadasDisponiblesXCategoria_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/TemporadasDisponiblesXCategoria',
    input='TemporadasDisponiblesXCategoria',
    inputPartName='parameters',
    output='TemporadasDisponiblesXCategoriaResponse',
    outputPartName='parameters',
    operationName='TemporadasDisponiblesXCategoria',
    style='document',
)


EquiposInscritosXCategoria_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/EquiposInscritosXCategoria',
    input='EquiposInscritosXCategoria',
    inputPartName='parameters',
    output='EquiposInscritosXCategoriaResponse',
    outputPartName='parameters',
    operationName='EquiposInscritosXCategoria',
    style='document',
)


CategoriaXEquipoInscrito_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/CategoriaXEquipoInscrito',
    input='CategoriaXEquipoInscrito',
    inputPartName='parameters',
    output='CategoriaXEquipoInscritoResponse',
    outputPartName='parameters',
    operationName='CategoriaXEquipoInscrito',
    style='document',
)


Fases_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/Fases',
    input='Fases',
    inputPartName='parameters',
    output='FasesResponse',
    outputPartName='parameters',
    operationName='Fases',
    style='document',
)


Grupos_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/Grupos',
    input='Grupos',
    inputPartName='parameters',
    output='GruposResponse',
    outputPartName='parameters',
    operationName='Grupos',
    style='document',
)


Jornadas_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/Jornadas',
    input='Jornadas',
    inputPartName='parameters',
    output='JornadasResponse',
    outputPartName='parameters',
    operationName='Jornadas',
    style='document',
)


Partidos_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/Partidos',
    input='Partidos',
    inputPartName='parameters',
    output='PartidosResponse',
    outputPartName='parameters',
    operationName='Partidos',
    style='document',
)


Partido_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/Partido',
    input='Partido',
    inputPartName='parameters',
    output='PartidoResponse',
    outputPartName='parameters',
    operationName='Partido',
    style='document',
)


ClasificacionXJornada_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/ClasificacionXJornada',
    input='ClasificacionXJornada',
    inputPartName='parameters',
    output='ClasificacionXJornadaResponse',
    outputPartName='parameters',
    operationName='ClasificacionXJornada',
    style='document',
)


EstadisticasAcumuladasXEquipo_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/EstadisticasAcumuladasXEquipo',
    input='EstadisticasAcumuladasXEquipo',
    inputPartName='parameters',
    output='EstadisticasAcumuladasXEquipoResponse',
    outputPartName='parameters',
    operationName='EstadisticasAcumuladasXEquipo',
    style='document',
)


EstadisticasAcumuladasXJugador_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/EstadisticasAcumuladasXJugador',
    input='EstadisticasAcumuladasXJugador',
    inputPartName='parameters',
    output='EstadisticasAcumuladasXJugadorResponse',
    outputPartName='parameters',
    operationName='EstadisticasAcumuladasXJugador',
    style='document',
)


TiposRanking_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/TiposRanking',
    input='TiposRanking',
    inputPartName='parameters',
    output='TiposRankingResponse',
    outputPartName='parameters',
    operationName='TiposRanking',
    style='document',
)


Ranking_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/Ranking',
    input='Ranking',
    inputPartName='parameters',
    output='RankingResponse',
    outputPartName='parameters',
    operationName='Ranking',
    style='document',
)


################################################################################
# SOAP Service


ServiciosFEBSoap_SERVICE = soap.Service(
    name='ServiciosFEBSoap',
    targetNamespace='http://servicios.feb.es/serviciosWeb',
    location='%(scheme)s://%(host)s/serviciosweb/CompeticionesFEB.asmx',
    schema=Schema_e4972,
    version=soap.SOAPVersion.SOAP11,
    methods=[TemporadasDisponibles_method, CategoriasDisponiblesXTemporada_method, TemporadasDisponiblesXCategoria_method, EquiposInscritosXCategoria_method, CategoriaXEquipoInscrito_method, Fases_method, Grupos_method, Jornadas_method, Partidos_method, Partido_method, ClasificacionXJornada_method, EstadisticasAcumuladasXEquipo_method, EstadisticasAcumuladasXJugador_method, TiposRanking_method, Ranking_method],
)


################################################################################
# SOAP Service Stub


class ServiciosFEBSoapServiceStub(soap.Stub):
    '''
    '''
    SERVICE = ServiciosFEBSoap_SERVICE
    SCHEME = 'http'
    HOST = 'servicios.feb.es'

    def TemporadasDisponibles(self, TemporadasDisponibles):
        '''
        '''
        return self.call('TemporadasDisponibles', TemporadasDisponibles)

    def CategoriasDisponiblesXTemporada(self, CategoriasDisponiblesXTemporada):
        '''
        '''
        return self.call('CategoriasDisponiblesXTemporada', CategoriasDisponiblesXTemporada)

    def TemporadasDisponiblesXCategoria(self, TemporadasDisponiblesXCategoria):
        '''
        '''
        return self.call('TemporadasDisponiblesXCategoria', TemporadasDisponiblesXCategoria)

    def EquiposInscritosXCategoria(self, EquiposInscritosXCategoria):
        '''
        '''
        return self.call('EquiposInscritosXCategoria', EquiposInscritosXCategoria)

    def CategoriaXEquipoInscrito(self, CategoriaXEquipoInscrito):
        '''
        '''
        return self.call('CategoriaXEquipoInscrito', CategoriaXEquipoInscrito)

    def Fases(self, Fases):
        '''
        '''
        return self.call('Fases', Fases)

    def Grupos(self, Grupos):
        '''
        '''
        return self.call('Grupos', Grupos)

    def Jornadas(self, Jornadas):
        '''
        '''
        return self.call('Jornadas', Jornadas)

    def Partidos(self, Partidos):
        '''
        '''
        return self.call('Partidos', Partidos)

    def Partido(self, Partido):
        '''
        '''
        return self.call('Partido', Partido)

    def ClasificacionXJornada(self, ClasificacionXJornada):
        '''
        '''
        return self.call('ClasificacionXJornada', ClasificacionXJornada)

    def EstadisticasAcumuladasXEquipo(self, EstadisticasAcumuladasXEquipo):
        '''
        '''
        return self.call('EstadisticasAcumuladasXEquipo', EstadisticasAcumuladasXEquipo)

    def EstadisticasAcumuladasXJugador(self, EstadisticasAcumuladasXJugador):
        '''
        '''
        return self.call('EstadisticasAcumuladasXJugador', EstadisticasAcumuladasXJugador)

    def TiposRanking(self, TiposRanking):
        '''
        '''
        return self.call('TiposRanking', TiposRanking)

################################################################################
# Methods

TiposRanking_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/TiposRanking',
    input='TiposRanking',
    inputPartName='parameters',
    output='TiposRankingResponse',
    outputPartName='parameters',
    operationName='TiposRanking',
    style='document',
)



################################################################################
# SOAP Service


ServiciosFEBSoap12_SERVICE = soap.Service(
    name='ServiciosFEBSoap12',
    targetNamespace='http://servicios.feb.es/serviciosWeb',
    location='%(scheme)s://%(host)s/serviciosweb/CompeticionesFEB.asmx',
    schema=Schema_e4972,
    version=soap.SOAPVersion.SOAP11,
    methods=[TemporadasDisponibles_method, CategoriasDisponiblesXTemporada_method, TemporadasDisponiblesXCategoria_method, EquiposInscritosXCategoria_method, CategoriaXEquipoInscrito_method, Fases_method, Grupos_method, Jornadas_method, Partidos_method, Partido_method, ClasificacionXJornada_method, EstadisticasAcumuladasXEquipo_method, EstadisticasAcumuladasXJugador_method, TiposRanking_method, Ranking_method],
)


################################################################################
# SOAP Service Stub


class ServiciosFEBSoap12ServiceStub(soap.Stub):
    '''
    '''
    SERVICE = ServiciosFEBSoap12_SERVICE
    SCHEME = 'http'
    HOST = 'servicios.feb.es'


    def TiposRanking(self, TiposRanking):
        '''
        '''
        return self.call('TiposRanking', TiposRanking)



################################################################################
# vim:et:ft=python:nowrap:sts=4:sw=4:ts=4
