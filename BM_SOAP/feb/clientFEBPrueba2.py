# -*- coding: utf-8 -*-
################################################################################
# Note: Generated by soapbox.wsdl2py at 2013-11-25 13:17:05.852000
#       Try to avoid editing it if you might need to regenerate it.
################################################################################


from soapbox import soap, xsd
from soapbox.xsd import UNBOUNDED


################################################################################
# Schemas


# http://servicios.feb.es/serviciosWeb


class ArrayOfTemporadaItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    TemporadaItems = xsd.ListElement('TemporadaItem', tagname='TemporadaItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class TemporadaItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    TemporadaIDs = xsd.ListElement(xsd.Int, tagname='TemporadaID', minOccurs=1, maxOccurs='1')
    TemporadaNombres = xsd.ListElement(xsd.String, tagname='TemporadaNombre', minOccurs=0, maxOccurs='1')
    NombreCategorias = xsd.ListElement(xsd.String, tagname='NombreCategoria', minOccurs=0, maxOccurs='1')

    @classmethod
    def create(cls, TemporadaID):
        instance = cls()
        instance.TemporadaID = TemporadaID
        return instance


class ArrayOfCategoriaItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    CategoriaItems = xsd.ListElement('CategoriaItem', tagname='CategoriaItem', minOccurs=0, maxOccurs=UNBOUNDED, nillable=True)

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class CategoriaItem(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    CategoriaIDs = xsd.ListElement(xsd.Int, tagname='CategoriaID', minOccurs=1, maxOccurs='1')
    CategoriaNombres = xsd.ListElement(xsd.String, tagname='CategoriaNombre', minOccurs=0, maxOccurs='1')

    @classmethod
    def create(cls, CategoriaID):
        instance = cls()
        instance.CategoriaID = CategoriaID
        return instance


class TemporadasDisponibles(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    key = xsd.ListElement(xsd.String, 'key', minOccurs=1, maxOccurs='1')

    @classmethod
    def create(cls, key):
        instance = cls()
        instance.key = key
        return instance


class TemporadasDisponiblesResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    TemporadasDisponiblesResult = xsd.ListElement('ArrayOfTemporadaItem', 'TemporadasDisponiblesResponse', minOccurs=0, maxOccurs='1')

    @classmethod
    def create(cls):
        instance = cls()
        return instance


class CategoriasDisponiblesXTemporada(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    idTemporada = xsd.ListElement(xsd.Int, 'CategoriasDisponiblesXTemporada', minOccurs=1, maxOccurs='1')
    key = xsd.ListElement(xsd.String, 'CategoriasDisponiblesXTemporada', minOccurs=0, maxOccurs='1')

    @classmethod
    def create(cls, idTemporada, key):
        instance = cls()
        instance.idTemporada = idTemporada
        instance.key = key
        return instance


class CategoriasDisponiblesXTemporadaResponse(xsd.ComplexType):
    '''
    '''
    INHERITANCE = None
    INDICATOR = xsd.Sequence
    CategoriasDisponiblesXTemporadaResult = xsd.ListElement('ArrayOfCategoriaItem', 'CategoriasDisponiblesXTemporadaResponse', minOccurs=0, maxOccurs='1')

    @classmethod
    def create(cls):
        instance = cls()
        return instance


Schema_e4972 = xsd.Schema(
    imports=[],
    targetNamespace='http://servicios.feb.es/serviciosWeb',
    elementFormDefault='qualified',
    simpleTypes=[],
    attributeGroups=[],
    groups=[],
    complexTypes=[ArrayOfTemporadaItem, TemporadaItem, ArrayOfCategoriaItem, CategoriaItem],
    elements={'TemporadasDisponibles': xsd.Element(TemporadasDisponibles()), 'TemporadasDisponiblesResponse': xsd.Element(TemporadasDisponiblesResponse()), 'CategoriasDisponiblesXTemporada': xsd.Element(CategoriasDisponiblesXTemporada()), 'CategoriasDisponiblesXTemporadaResponse': xsd.Element(CategoriasDisponiblesXTemporadaResponse())},
)


################################################################################
# Methods


TemporadasDisponibles_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/TemporadasDisponibles',
    input='TemporadasDisponibles',
    inputPartName='parameters',
    output='TemporadasDisponiblesResponse',
    outputPartName='parameters',
    operationName='TemporadasDisponibles',
    style='document',
)


CategoriasDisponiblesXTemporada_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/CategoriasDisponiblesXTemporada',
    input='CategoriasDisponiblesXTemporada',
    inputPartName='parameters',
    output='CategoriasDisponiblesXTemporadaResponse',
    outputPartName='parameters',
    operationName='CategoriasDisponiblesXTemporada',
    style='document',
)


################################################################################
# SOAP Service


ServiciosFEBSoap_SERVICE = soap.Service(
    name='ServiciosFEBSoap',
    targetNamespace='http://servicios.feb.es/serviciosWeb',
    location='%(scheme)s://%(host)s/serviciosweb/CompeticionesFEB.asmx',
    schema=Schema_e4972,
    version=soap.SOAPVersion.SOAP11,
    methods=[TemporadasDisponibles_method, CategoriasDisponiblesXTemporada_method],
)


################################################################################
# SOAP Service Stub


class ServiciosFEBSoapServiceStub(soap.Stub):
    '''
    '''
    SERVICE = ServiciosFEBSoap_SERVICE
    SCHEME = 'http'
    HOST = 'servicios.feb.es'

    def TemporadasDisponibles(self, TemporadasDisponibles):
        '''
        '''
        return self.call('TemporadasDisponibles', TemporadasDisponibles)

    def CategoriasDisponiblesXTemporada(self, CategoriasDisponiblesXTemporada):
        '''
        '''
        return self.call('CategoriasDisponiblesXTemporada', CategoriasDisponiblesXTemporada)

################################################################################
# Methods


TemporadasDisponibles_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/TemporadasDisponibles',
    input='TemporadasDisponibles',
    inputPartName='parameters',
    output='TemporadasDisponiblesResponse',
    outputPartName='parameters',
    operationName='TemporadasDisponibles',
    style='document',
)


CategoriasDisponiblesXTemporada_method = xsd.Method(
    soapAction='http://servicios.feb.es/serviciosWeb/CategoriasDisponiblesXTemporada',
    input='CategoriasDisponiblesXTemporada',
    inputPartName='parameters',
    output='CategoriasDisponiblesXTemporadaResponse',
    outputPartName='parameters',
    operationName='CategoriasDisponiblesXTemporada',
    style='document',
)


################################################################################
# SOAP Service


ServiciosFEBSoap12_SERVICE = soap.Service(
    name='ServiciosFEBSoap12',
    targetNamespace='http://servicios.feb.es/serviciosWeb',
    location='%(scheme)s://%(host)s/serviciosweb/CompeticionesFEB.asmx',
    schema=Schema_e4972,
    version=soap.SOAPVersion.SOAP11,
    methods=[TemporadasDisponibles_method, CategoriasDisponiblesXTemporada_method],
)


################################################################################
# SOAP Service Stub


class ServiciosFEBSoap12ServiceStub(soap.Stub):
    '''
    '''
    SERVICE = ServiciosFEBSoap12_SERVICE
    SCHEME = 'http'
    HOST = 'servicios.feb.es'

    def TemporadasDisponibles(self, TemporadasDisponibles):
        '''
        '''
        return self.call('TemporadasDisponibles', TemporadasDisponibles)

    def CategoriasDisponiblesXTemporada(self, CategoriasDisponiblesXTemporada):
        '''
        '''
        return self.call('CategoriasDisponiblesXTemporada', CategoriasDisponiblesXTemporada)


################################################################################
# vim:et:ft=python:nowrap:sts=4:sw=4:ts=4
